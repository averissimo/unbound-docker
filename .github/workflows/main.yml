on:
  push:
    paths-ignore:
      - README.md
  schedule:
    - cron: '12 7 * * 1/7'

jobs:
  build_docker:
    runs-on: ubuntu-latest
    name: Build/Push Docker
    steps:
    - name: Checkout current repo
      uses: actions/checkout@v2
      with:
        ref: master
        fetch-depth: 0
    - name: Buildx help
      run: |
        docker -v
        export DOCKER_CLI_EXPERIMENTAL=enabled
        docker buildx create --help
    -
      name: Set up QEMU
      uses: docker/setup-qemu-action@v1
    -
      name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
    -
      name: Inspect builder
      run: |
        echo "Name:      ${{ steps.buildx.outputs.name }}"
        echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
        echo "Status:    ${{ steps.buildx.outputs.status }}"
        echo "Flags:     ${{ steps.buildx.outputs.flags }}"
        echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
    -
      name: inspect
      run: |
        docker buildx inspect --bootstrap
    #- name: Set up Docker Buildx
    #  id: buildx
    #  uses: crazy-max/ghaction-docker-buildx@v1
    #  with:
    #    version: latest
    - name: Available platforms
      run: echo ${{ steps.buildx.outputs.platforms }}
    - name: Docker login
      run: |
        echo "${{ secrets.HUB_PASS }}" | docker login --username "${{ secrets.HUB_USER }}" --password-stdin
    - name: Set credentials
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
    - name: Pull changes from MatthewVance/unbound-docker
      run: |
        git pull
        git remote add mvance https://github.com/MatthewVance/unbound-docker
        git fetch --all
        git merge mvance/master --ff
    - name: Push changes
      uses: ad-m/github-push-action@fe38f0a751bf9149f0270cc1fe20bf9156854365
      with:
        directory: ./
        repository:  averissimo/unbound-docker
        github_token: ${{ secrets.GH_TOKEN }}
    - name: ls
      run: |
        ls
    -
      name: Build
      run: |
        bash av_custom.bash
        cd custom-av

        # cat ./Dockerfile
        # docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        # docker buildx create --use --driver docker-container
        # docker buildx create --use --driver docker-container --name multiarch

        docker buildx build \
          --platform  linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6 \
          --output "type=image,push=true" \
          --tag betashil/unbound:latest \
          --file Dockerfile .
